plugins {
	// Required for NeoGradle
	id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.7"
}

subprojects {
	apply plugin: 'java'

	java.toolchain.languageVersion = JavaLanguageVersion.of(17)
	java.withSourcesJar()
	java.withJavadocJar()

	jar {
		from(rootProject.file("LICENSE")) {
			rename { "${it}_${mod_name}" }
		}
		manifest {
			attributes([
				'Specification-Title'     : mod_name,
				'Specification-Vendor'    : mod_author,
				'Specification-Version'   : project.jar.archiveVersion,
				'Implementation-Title'    : project.name,
				'Implementation-Version'  : project.jar.archiveVersion,
				'Implementation-Vendor'   : mod_author,
				'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				'Timestamp'               : System.currentTimeMillis(),
				'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
				'Built-On-Minecraft'      : minecraft_version
			])
		}
	}

	sourcesJar {
		from(rootProject.file("LICENSE")) {
			rename { "${it}_${mod_name}" }
		}
	}

	repositories {
		mavenCentral()
		maven {
			name = 'Sponge / Mixin'
			url = 'https://repo.spongepowered.org/repository/maven-public/'
		}

		maven {
			name = 'Quilt'
			url = 'https://maven.quiltmc.org/repository/release'
		}

		maven {
			name "TerraformersMC"
			url "https://maven.terraformersmc.com/releases/"
		}

		maven {
			name = 'GeckoLib'
			url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
		}

		maven {
			name "Modrinth"
			url "https://api.modrinth.com/maven"
			content {
				includeGroup "maven.modrinth"
			}
		}
	}

	tasks.withType(JavaCompile).configureEach {

		it.options.encoding = 'UTF-8'
		it.options.getRelease().set(17)
	}

	processResources {
		def expandProps = [
			"version"                       : version,
			"mod_group"                     : project.mod_group,
			"mod_name"                      : mod_name,
			"mod_author"                    : mod_author,
			"mod_id"                        : mod_id,
			"license"                       : license,
			"description"                   : project.description,
			"mod_source"                    : project.mod_source,
			"discord"                       : discord,
			"display_url"                   : display_url,
			"curseforge_url"                : curseforge_url,
			"modrinth_url"                  : modrinth_url,
			"credits"                       : credits,

			"minecraft_version"             : minecraft_version,
			"minecraft_version_range"       : minecraft_version_range,
			"pack_format_version"           : pack_format_version,

			"fabric_version"                : fabric_version,
			"fabric_loader_version"         : fabric_loader_version,

			"neoforge_version"              : neoforge_version,
			"neoforge_version_range"        : neoforge_version_range,
			"neoforge_loader_version_range" : neoforge_loader_version_range,

			"forge_version"                 : forge_version,
			"forge_loader_version_range"    : forge_loader_version_range,

			"quilt_sl_version"              : quilt_sl_version,
			"quilt_loader_version"          : quilt_loader_version,
			"quilt_loader_version_range"    : quilt_loader_version_range,
			"quilted_fabric_api_version"    : quilted_fabric_api_version
		]

		filesMatching(['pack.mcmeta', 'fabric.mod.json', 'quilt.mod.json', 'META-INF/mods.toml', '*.mixins.json']) {
			expand expandProps
		}
		inputs.properties(expandProps)
	}

	// Disables Gradle's custom module metadata from being published to maven. The
	// metadata includes mapped dependencies which are not reasonably consumable by
	// other mod developers.
	tasks.withType(GenerateModuleMetadata).configureEach {
		enabled = false
	}
}
